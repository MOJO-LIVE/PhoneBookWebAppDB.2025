@page
@model RegisterModel
@{
    ViewData["Title"] = "Регистрация | Телефонная книга";
}

<div class="header">
    Регистрация
</div>

<div class="content">
    <div class="auth-box">
        <h2>Создать аккаунт</h2>

        <div id="ajaxMessage" class="message"></div>

        <form id="registerForm">
            <div class="form-group">
                <input id="RegisterUsername" name="RegisterUsername" placeholder="Имя пользователя" />
                <span id="usernameMessage" style="margin-left: 10px;"></span>
            </div>
            <div class="form-group">
                <input id="RegisterPassword" name="RegisterPassword" type="password" placeholder="Пароль" />
            </div>
            <button type="submit">Зарегистрироваться</button>
        </form>

        <a class="link" asp-page="/Index">Войти</a>
    </div>
</div>

@section Scripts {
    <script>
        // Проверка доступности логина
        document.getElementById("RegisterUsername").addEventListener("blur", () => {
            const username = document.getElementById("RegisterUsername").value.trim();
            if (!username) return;

            fetch(`/Register?handler=CheckUsername&username=${encodeURIComponent(username)}`)
                .then(response => response.json())
                .then(data => {
                    const msg = document.getElementById("usernameMessage");
                    if (data.exists) {
                        msg.textContent = "Имя уже занято";
                        msg.style.color = "red";
                    } else {
                        msg.textContent = "Имя доступно";
                        msg.style.color = "green";
                    }
                })
                .catch(error => {
                    console.error("Ошибка AJAX:", error);
                });
        });

        // Отправка формы через AJAX
        document.getElementById("registerForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const username = document.getElementById("RegisterUsername").value;
            const password = document.getElementById("RegisterPassword").value;

            const response = await fetch("/Register?handler=RegisterAjax", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ username, password })
            });

            const result = await response.json();
            const msg = document.getElementById("ajaxMessage");
            msg.innerText = result.message;
            msg.style.color = result.success ? "green" : "red";

            if (result.success) {
                // Можно переадресовать или очистить форму
                setTimeout(() => {
                    window.location.href = "/Index";
                }, 1500);
            }
        });
    </script>
}

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f0f4f8;
        margin: 0;
        padding: 0;
    }

    .header {
        background-color: #2a9d8f;
        color: white;
        padding: 20px;
        text-align: center;
        font-size: 24px;
        font-weight: bold;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .content {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 50px 20px;
    }

    .auth-box {
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        padding: 40px 30px;
        width: 100%;
        max-width: 400px;
        box-sizing: border-box;
    }

    h2 {
        color: #2a9d8f;
        margin-top: 0;
        margin-bottom: 25px;
        text-align: center;
    }

    .form-group {
        margin-bottom: 20px;
    }

    input {
        width: 100%;
        padding: 12px;
        border: 1px solid #ccc;
        border-radius: 6px;
        font-size: 16px;
        box-sizing: border-box;
        transition: border-color 0.3s ease;
    }

        input:focus {
            border-color: #2a9d8f;
            outline: none;
        }

    button {
        width: 100%;
        padding: 12px;
        background-color: #2a9d8f;
        color: white;
        border: none;
        border-radius: 6px;
        font-size: 16px;
        font-weight: bold;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        button:hover {
            background-color: #21867a;
        }

    .message {
        margin-top: 15px;
        text-align: center;
        font-size: 14px;
    }

    .link {
        display: block;
        margin-top: 25px;
        text-align: center;
        color: #2a9d8f;
        text-decoration: none;
        font-size: 14px;
    }

        .link:hover {
            text-decoration: underline;
        }
</style>
